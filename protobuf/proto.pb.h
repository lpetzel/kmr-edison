// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto.proto

#ifndef PROTOBUF_proto_2eproto__INCLUDED
#define PROTOBUF_proto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class BSPushBase;
class BSPushBaseDefaultTypeInternal;
extern BSPushBaseDefaultTypeInternal _BSPushBase_default_instance_;
class CSTask;
class CSTaskDefaultTypeInternal;
extern CSTaskDefaultTypeInternal _CSTask_default_instance_;
class DSActivateGate;
class DSActivateGateDefaultTypeInternal;
extern DSActivateGateDefaultTypeInternal _DSActivateGate_default_instance_;
class MPSFinished;
class MPSFinishedDefaultTypeInternal;
extern MPSFinishedDefaultTypeInternal _MPSFinished_default_instance_;
class MPSProductRetrived;
class MPSProductRetrivedDefaultTypeInternal;
extern MPSProductRetrivedDefaultTypeInternal _MPSProductRetrived_default_instance_;
class MoveConveyorBelt;
class MoveConveyorBeltDefaultTypeInternal;
extern MoveConveyorBeltDefaultTypeInternal _MoveConveyorBelt_default_instance_;
class RSMountRing;
class RSMountRingDefaultTypeInternal;
extern RSMountRingDefaultTypeInternal _RSMountRing_default_instance_;
class SSTask;
class SSTaskDefaultTypeInternal;
extern SSTaskDefaultTypeInternal _SSTask_default_instance_;
class SetSignalLight;
class SetSignalLightDefaultTypeInternal;
extern SetSignalLightDefaultTypeInternal _SetSignalLight_default_instance_;

namespace protobuf_proto_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_proto_2eproto

enum ConveyorDirection {
  FORWARD = 1,
  BACKWARD = 2
};
bool ConveyorDirection_IsValid(int value);
const ConveyorDirection ConveyorDirection_MIN = FORWARD;
const ConveyorDirection ConveyorDirection_MAX = BACKWARD;
const int ConveyorDirection_ARRAYSIZE = ConveyorDirection_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConveyorDirection_descriptor();
inline const ::std::string& ConveyorDirection_Name(ConveyorDirection value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConveyorDirection_descriptor(), value);
}
inline bool ConveyorDirection_Parse(
    const ::std::string& name, ConveyorDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConveyorDirection>(
    ConveyorDirection_descriptor(), name, value);
}
enum SensorOnMPS {
  INPUT = 1,
  OUTPUT = 2,
  MIDDLE = 3
};
bool SensorOnMPS_IsValid(int value);
const SensorOnMPS SensorOnMPS_MIN = INPUT;
const SensorOnMPS SensorOnMPS_MAX = MIDDLE;
const int SensorOnMPS_ARRAYSIZE = SensorOnMPS_MAX + 1;

const ::google::protobuf::EnumDescriptor* SensorOnMPS_descriptor();
inline const ::std::string& SensorOnMPS_Name(SensorOnMPS value) {
  return ::google::protobuf::internal::NameOfEnum(
    SensorOnMPS_descriptor(), value);
}
inline bool SensorOnMPS_Parse(
    const ::std::string& name, SensorOnMPS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SensorOnMPS>(
    SensorOnMPS_descriptor(), name, value);
}
enum SSOp {
  STORE = 1,
  RETRIVE = 2
};
bool SSOp_IsValid(int value);
const SSOp SSOp_MIN = STORE;
const SSOp SSOp_MAX = RETRIVE;
const int SSOp_ARRAYSIZE = SSOp_MAX + 1;

const ::google::protobuf::EnumDescriptor* SSOp_descriptor();
inline const ::std::string& SSOp_Name(SSOp value) {
  return ::google::protobuf::internal::NameOfEnum(
    SSOp_descriptor(), value);
}
inline bool SSOp_Parse(
    const ::std::string& name, SSOp* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SSOp>(
    SSOp_descriptor(), name, value);
}
enum SSField {
  TODO = 1
};
bool SSField_IsValid(int value);
const SSField SSField_MIN = TODO;
const SSField SSField_MAX = TODO;
const int SSField_ARRAYSIZE = SSField_MAX + 1;

const ::google::protobuf::EnumDescriptor* SSField_descriptor();
inline const ::std::string& SSField_Name(SSField value) {
  return ::google::protobuf::internal::NameOfEnum(
    SSField_descriptor(), value);
}
inline bool SSField_Parse(
    const ::std::string& name, SSField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SSField>(
    SSField_descriptor(), name, value);
}
enum CsOp {
  RETRIEVE_CAP = 1,
  MOUNT_CAP = 2
};
bool CsOp_IsValid(int value);
const CsOp CsOp_MIN = RETRIEVE_CAP;
const CsOp CsOp_MAX = MOUNT_CAP;
const int CsOp_ARRAYSIZE = CsOp_MAX + 1;

const ::google::protobuf::EnumDescriptor* CsOp_descriptor();
inline const ::std::string& CsOp_Name(CsOp value) {
  return ::google::protobuf::internal::NameOfEnum(
    CsOp_descriptor(), value);
}
inline bool CsOp_Parse(
    const ::std::string& name, CsOp* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CsOp>(
    CsOp_descriptor(), name, value);
}
enum LightState {
  OFF = 0,
  ON = 1,
  BLINK = 2
};
bool LightState_IsValid(int value);
const LightState LightState_MIN = OFF;
const LightState LightState_MAX = BLINK;
const int LightState_ARRAYSIZE = LightState_MAX + 1;

const ::google::protobuf::EnumDescriptor* LightState_descriptor();
inline const ::std::string& LightState_Name(LightState value) {
  return ::google::protobuf::internal::NameOfEnum(
    LightState_descriptor(), value);
}
inline bool LightState_Parse(
    const ::std::string& name, LightState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LightState>(
    LightState_descriptor(), name, value);
}
// ===================================================================

class SetSignalLight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetSignalLight) */ {
 public:
  SetSignalLight();
  virtual ~SetSignalLight();

  SetSignalLight(const SetSignalLight& from);

  inline SetSignalLight& operator=(const SetSignalLight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSignalLight& default_instance();

  static inline const SetSignalLight* internal_default_instance() {
    return reinterpret_cast<const SetSignalLight*>(
               &_SetSignalLight_default_instance_);
  }

  void Swap(SetSignalLight* other);

  // implements Message ----------------------------------------------

  inline SetSignalLight* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSignalLight* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetSignalLight& from);
  void MergeFrom(const SetSignalLight& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetSignalLight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required .LightState red = 2;
  bool has_red() const;
  void clear_red();
  static const int kRedFieldNumber = 2;
  ::LightState red() const;
  void set_red(::LightState value);

  // required .LightState yellow = 3;
  bool has_yellow() const;
  void clear_yellow();
  static const int kYellowFieldNumber = 3;
  ::LightState yellow() const;
  void set_yellow(::LightState value);

  // required .LightState green = 4;
  bool has_green() const;
  void clear_green();
  static const int kGreenFieldNumber = 4;
  ::LightState green() const;
  void set_green(::LightState value);

  // @@protoc_insertion_point(class_scope:SetSignalLight)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_red();
  void clear_has_red();
  void set_has_yellow();
  void clear_has_yellow();
  void set_has_green();
  void clear_has_green();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int red_;
  int yellow_;
  int green_;
  friend struct  protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MoveConveyorBelt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MoveConveyorBelt) */ {
 public:
  MoveConveyorBelt();
  virtual ~MoveConveyorBelt();

  MoveConveyorBelt(const MoveConveyorBelt& from);

  inline MoveConveyorBelt& operator=(const MoveConveyorBelt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveConveyorBelt& default_instance();

  static inline const MoveConveyorBelt* internal_default_instance() {
    return reinterpret_cast<const MoveConveyorBelt*>(
               &_MoveConveyorBelt_default_instance_);
  }

  void Swap(MoveConveyorBelt* other);

  // implements Message ----------------------------------------------

  inline MoveConveyorBelt* New() const PROTOBUF_FINAL { return New(NULL); }

  MoveConveyorBelt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MoveConveyorBelt& from);
  void MergeFrom(const MoveConveyorBelt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MoveConveyorBelt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required .ConveyorDirection direction = 2;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 2;
  ::ConveyorDirection direction() const;
  void set_direction(::ConveyorDirection value);

  // required .SensorOnMPS stop_sensor = 3;
  bool has_stop_sensor() const;
  void clear_stop_sensor();
  static const int kStopSensorFieldNumber = 3;
  ::SensorOnMPS stop_sensor() const;
  void set_stop_sensor(::SensorOnMPS value);

  // @@protoc_insertion_point(class_scope:MoveConveyorBelt)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_direction();
  void clear_has_direction();
  void set_has_stop_sensor();
  void clear_has_stop_sensor();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int direction_;
  int stop_sensor_;
  friend struct  protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BSPushBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BSPushBase) */ {
 public:
  BSPushBase();
  virtual ~BSPushBase();

  BSPushBase(const BSPushBase& from);

  inline BSPushBase& operator=(const BSPushBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BSPushBase& default_instance();

  static inline const BSPushBase* internal_default_instance() {
    return reinterpret_cast<const BSPushBase*>(
               &_BSPushBase_default_instance_);
  }

  void Swap(BSPushBase* other);

  // implements Message ----------------------------------------------

  inline BSPushBase* New() const PROTOBUF_FINAL { return New(NULL); }

  BSPushBase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BSPushBase& from);
  void MergeFrom(const BSPushBase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BSPushBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 slot = 2;
  bool has_slot() const;
  void clear_slot();
  static const int kSlotFieldNumber = 2;
  ::google::protobuf::uint32 slot() const;
  void set_slot(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BSPushBase)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_slot();
  void clear_has_slot();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 slot_;
  friend struct  protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SSTask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SSTask) */ {
 public:
  SSTask();
  virtual ~SSTask();

  SSTask(const SSTask& from);

  inline SSTask& operator=(const SSTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SSTask& default_instance();

  static inline const SSTask* internal_default_instance() {
    return reinterpret_cast<const SSTask*>(
               &_SSTask_default_instance_);
  }

  void Swap(SSTask* other);

  // implements Message ----------------------------------------------

  inline SSTask* New() const PROTOBUF_FINAL { return New(NULL); }

  SSTask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SSTask& from);
  void MergeFrom(const SSTask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SSTask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 SSOp = 2;
  bool has_ssop() const;
  void clear_ssop();
  static const int kSSOpFieldNumber = 2;
  ::google::protobuf::uint32 ssop() const;
  void set_ssop(::google::protobuf::uint32 value);

  // required uint32 SSField = 3;
  bool has_ssfield() const;
  void clear_ssfield();
  static const int kSSFieldFieldNumber = 3;
  ::google::protobuf::uint32 ssfield() const;
  void set_ssfield(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SSTask)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_ssop();
  void clear_has_ssop();
  void set_has_ssfield();
  void clear_has_ssfield();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 ssop_;
  ::google::protobuf::uint32 ssfield_;
  friend struct  protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RSMountRing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RSMountRing) */ {
 public:
  RSMountRing();
  virtual ~RSMountRing();

  RSMountRing(const RSMountRing& from);

  inline RSMountRing& operator=(const RSMountRing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RSMountRing& default_instance();

  static inline const RSMountRing* internal_default_instance() {
    return reinterpret_cast<const RSMountRing*>(
               &_RSMountRing_default_instance_);
  }

  void Swap(RSMountRing* other);

  // implements Message ----------------------------------------------

  inline RSMountRing* New() const PROTOBUF_FINAL { return New(NULL); }

  RSMountRing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RSMountRing& from);
  void MergeFrom(const RSMountRing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RSMountRing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 feeder = 2;
  bool has_feeder() const;
  void clear_feeder();
  static const int kFeederFieldNumber = 2;
  ::google::protobuf::uint32 feeder() const;
  void set_feeder(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RSMountRing)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_feeder();
  void clear_has_feeder();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 feeder_;
  friend struct  protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CSTask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSTask) */ {
 public:
  CSTask();
  virtual ~CSTask();

  CSTask(const CSTask& from);

  inline CSTask& operator=(const CSTask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTask& default_instance();

  static inline const CSTask* internal_default_instance() {
    return reinterpret_cast<const CSTask*>(
               &_CSTask_default_instance_);
  }

  void Swap(CSTask* other);

  // implements Message ----------------------------------------------

  inline CSTask* New() const PROTOBUF_FINAL { return New(NULL); }

  CSTask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSTask& from);
  void MergeFrom(const CSTask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSTask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required .CsOp operation = 2;
  bool has_operation() const;
  void clear_operation();
  static const int kOperationFieldNumber = 2;
  ::CsOp operation() const;
  void set_operation(::CsOp value);

  // @@protoc_insertion_point(class_scope:CSTask)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_operation();
  void clear_has_operation();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int operation_;
  friend struct  protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DSActivateGate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DSActivateGate) */ {
 public:
  DSActivateGate();
  virtual ~DSActivateGate();

  DSActivateGate(const DSActivateGate& from);

  inline DSActivateGate& operator=(const DSActivateGate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DSActivateGate& default_instance();

  static inline const DSActivateGate* internal_default_instance() {
    return reinterpret_cast<const DSActivateGate*>(
               &_DSActivateGate_default_instance_);
  }

  void Swap(DSActivateGate* other);

  // implements Message ----------------------------------------------

  inline DSActivateGate* New() const PROTOBUF_FINAL { return New(NULL); }

  DSActivateGate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DSActivateGate& from);
  void MergeFrom(const DSActivateGate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DSActivateGate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 gate = 2;
  bool has_gate() const;
  void clear_gate();
  static const int kGateFieldNumber = 2;
  ::google::protobuf::uint32 gate() const;
  void set_gate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DSActivateGate)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_gate();
  void clear_has_gate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 gate_;
  friend struct  protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MPSFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MPSFinished) */ {
 public:
  MPSFinished();
  virtual ~MPSFinished();

  MPSFinished(const MPSFinished& from);

  inline MPSFinished& operator=(const MPSFinished& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MPSFinished& default_instance();

  static inline const MPSFinished* internal_default_instance() {
    return reinterpret_cast<const MPSFinished*>(
               &_MPSFinished_default_instance_);
  }

  void Swap(MPSFinished* other);

  // implements Message ----------------------------------------------

  inline MPSFinished* New() const PROTOBUF_FINAL { return New(NULL); }

  MPSFinished* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MPSFinished& from);
  void MergeFrom(const MPSFinished& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MPSFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MPSFinished)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MPSProductRetrived : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MPSProductRetrived) */ {
 public:
  MPSProductRetrived();
  virtual ~MPSProductRetrived();

  MPSProductRetrived(const MPSProductRetrived& from);

  inline MPSProductRetrived& operator=(const MPSProductRetrived& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MPSProductRetrived& default_instance();

  static inline const MPSProductRetrived* internal_default_instance() {
    return reinterpret_cast<const MPSProductRetrived*>(
               &_MPSProductRetrived_default_instance_);
  }

  void Swap(MPSProductRetrived* other);

  // implements Message ----------------------------------------------

  inline MPSProductRetrived* New() const PROTOBUF_FINAL { return New(NULL); }

  MPSProductRetrived* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MPSProductRetrived& from);
  void MergeFrom(const MPSProductRetrived& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MPSProductRetrived* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ID = 1;
  bool has_id() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MPSProductRetrived)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_proto_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSignalLight

// required uint32 ID = 1;
inline bool SetSignalLight::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetSignalLight::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetSignalLight::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetSignalLight::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SetSignalLight::id() const {
  // @@protoc_insertion_point(field_get:SetSignalLight.ID)
  return id_;
}
inline void SetSignalLight::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SetSignalLight.ID)
}

// required .LightState red = 2;
inline bool SetSignalLight::has_red() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetSignalLight::set_has_red() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetSignalLight::clear_has_red() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetSignalLight::clear_red() {
  red_ = 0;
  clear_has_red();
}
inline ::LightState SetSignalLight::red() const {
  // @@protoc_insertion_point(field_get:SetSignalLight.red)
  return static_cast< ::LightState >(red_);
}
inline void SetSignalLight::set_red(::LightState value) {
  assert(::LightState_IsValid(value));
  set_has_red();
  red_ = value;
  // @@protoc_insertion_point(field_set:SetSignalLight.red)
}

// required .LightState yellow = 3;
inline bool SetSignalLight::has_yellow() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetSignalLight::set_has_yellow() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetSignalLight::clear_has_yellow() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetSignalLight::clear_yellow() {
  yellow_ = 0;
  clear_has_yellow();
}
inline ::LightState SetSignalLight::yellow() const {
  // @@protoc_insertion_point(field_get:SetSignalLight.yellow)
  return static_cast< ::LightState >(yellow_);
}
inline void SetSignalLight::set_yellow(::LightState value) {
  assert(::LightState_IsValid(value));
  set_has_yellow();
  yellow_ = value;
  // @@protoc_insertion_point(field_set:SetSignalLight.yellow)
}

// required .LightState green = 4;
inline bool SetSignalLight::has_green() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetSignalLight::set_has_green() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetSignalLight::clear_has_green() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetSignalLight::clear_green() {
  green_ = 0;
  clear_has_green();
}
inline ::LightState SetSignalLight::green() const {
  // @@protoc_insertion_point(field_get:SetSignalLight.green)
  return static_cast< ::LightState >(green_);
}
inline void SetSignalLight::set_green(::LightState value) {
  assert(::LightState_IsValid(value));
  set_has_green();
  green_ = value;
  // @@protoc_insertion_point(field_set:SetSignalLight.green)
}

// -------------------------------------------------------------------

// MoveConveyorBelt

// required uint32 ID = 1;
inline bool MoveConveyorBelt::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveConveyorBelt::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveConveyorBelt::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveConveyorBelt::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MoveConveyorBelt::id() const {
  // @@protoc_insertion_point(field_get:MoveConveyorBelt.ID)
  return id_;
}
inline void MoveConveyorBelt::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MoveConveyorBelt.ID)
}

// required .ConveyorDirection direction = 2;
inline bool MoveConveyorBelt::has_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveConveyorBelt::set_has_direction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveConveyorBelt::clear_has_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveConveyorBelt::clear_direction() {
  direction_ = 1;
  clear_has_direction();
}
inline ::ConveyorDirection MoveConveyorBelt::direction() const {
  // @@protoc_insertion_point(field_get:MoveConveyorBelt.direction)
  return static_cast< ::ConveyorDirection >(direction_);
}
inline void MoveConveyorBelt::set_direction(::ConveyorDirection value) {
  assert(::ConveyorDirection_IsValid(value));
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:MoveConveyorBelt.direction)
}

// required .SensorOnMPS stop_sensor = 3;
inline bool MoveConveyorBelt::has_stop_sensor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveConveyorBelt::set_has_stop_sensor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveConveyorBelt::clear_has_stop_sensor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveConveyorBelt::clear_stop_sensor() {
  stop_sensor_ = 1;
  clear_has_stop_sensor();
}
inline ::SensorOnMPS MoveConveyorBelt::stop_sensor() const {
  // @@protoc_insertion_point(field_get:MoveConveyorBelt.stop_sensor)
  return static_cast< ::SensorOnMPS >(stop_sensor_);
}
inline void MoveConveyorBelt::set_stop_sensor(::SensorOnMPS value) {
  assert(::SensorOnMPS_IsValid(value));
  set_has_stop_sensor();
  stop_sensor_ = value;
  // @@protoc_insertion_point(field_set:MoveConveyorBelt.stop_sensor)
}

// -------------------------------------------------------------------

// BSPushBase

// required uint32 ID = 1;
inline bool BSPushBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BSPushBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BSPushBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BSPushBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BSPushBase::id() const {
  // @@protoc_insertion_point(field_get:BSPushBase.ID)
  return id_;
}
inline void BSPushBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:BSPushBase.ID)
}

// required uint32 slot = 2;
inline bool BSPushBase::has_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BSPushBase::set_has_slot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BSPushBase::clear_has_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BSPushBase::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 BSPushBase::slot() const {
  // @@protoc_insertion_point(field_get:BSPushBase.slot)
  return slot_;
}
inline void BSPushBase::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:BSPushBase.slot)
}

// -------------------------------------------------------------------

// SSTask

// required uint32 ID = 1;
inline bool SSTask::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SSTask::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SSTask::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SSTask::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 SSTask::id() const {
  // @@protoc_insertion_point(field_get:SSTask.ID)
  return id_;
}
inline void SSTask::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:SSTask.ID)
}

// required uint32 SSOp = 2;
inline bool SSTask::has_ssop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SSTask::set_has_ssop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SSTask::clear_has_ssop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SSTask::clear_ssop() {
  ssop_ = 0u;
  clear_has_ssop();
}
inline ::google::protobuf::uint32 SSTask::ssop() const {
  // @@protoc_insertion_point(field_get:SSTask.SSOp)
  return ssop_;
}
inline void SSTask::set_ssop(::google::protobuf::uint32 value) {
  set_has_ssop();
  ssop_ = value;
  // @@protoc_insertion_point(field_set:SSTask.SSOp)
}

// required uint32 SSField = 3;
inline bool SSTask::has_ssfield() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SSTask::set_has_ssfield() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SSTask::clear_has_ssfield() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SSTask::clear_ssfield() {
  ssfield_ = 0u;
  clear_has_ssfield();
}
inline ::google::protobuf::uint32 SSTask::ssfield() const {
  // @@protoc_insertion_point(field_get:SSTask.SSField)
  return ssfield_;
}
inline void SSTask::set_ssfield(::google::protobuf::uint32 value) {
  set_has_ssfield();
  ssfield_ = value;
  // @@protoc_insertion_point(field_set:SSTask.SSField)
}

// -------------------------------------------------------------------

// RSMountRing

// required uint32 ID = 1;
inline bool RSMountRing::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RSMountRing::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RSMountRing::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RSMountRing::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RSMountRing::id() const {
  // @@protoc_insertion_point(field_get:RSMountRing.ID)
  return id_;
}
inline void RSMountRing::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:RSMountRing.ID)
}

// required uint32 feeder = 2;
inline bool RSMountRing::has_feeder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RSMountRing::set_has_feeder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RSMountRing::clear_has_feeder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RSMountRing::clear_feeder() {
  feeder_ = 0u;
  clear_has_feeder();
}
inline ::google::protobuf::uint32 RSMountRing::feeder() const {
  // @@protoc_insertion_point(field_get:RSMountRing.feeder)
  return feeder_;
}
inline void RSMountRing::set_feeder(::google::protobuf::uint32 value) {
  set_has_feeder();
  feeder_ = value;
  // @@protoc_insertion_point(field_set:RSMountRing.feeder)
}

// -------------------------------------------------------------------

// CSTask

// required uint32 ID = 1;
inline bool CSTask::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTask::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTask::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTask::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSTask::id() const {
  // @@protoc_insertion_point(field_get:CSTask.ID)
  return id_;
}
inline void CSTask::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CSTask.ID)
}

// required .CsOp operation = 2;
inline bool CSTask::has_operation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTask::set_has_operation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTask::clear_has_operation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTask::clear_operation() {
  operation_ = 1;
  clear_has_operation();
}
inline ::CsOp CSTask::operation() const {
  // @@protoc_insertion_point(field_get:CSTask.operation)
  return static_cast< ::CsOp >(operation_);
}
inline void CSTask::set_operation(::CsOp value) {
  assert(::CsOp_IsValid(value));
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:CSTask.operation)
}

// -------------------------------------------------------------------

// DSActivateGate

// required uint32 ID = 1;
inline bool DSActivateGate::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DSActivateGate::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DSActivateGate::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DSActivateGate::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 DSActivateGate::id() const {
  // @@protoc_insertion_point(field_get:DSActivateGate.ID)
  return id_;
}
inline void DSActivateGate::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:DSActivateGate.ID)
}

// required uint32 gate = 2;
inline bool DSActivateGate::has_gate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DSActivateGate::set_has_gate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DSActivateGate::clear_has_gate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DSActivateGate::clear_gate() {
  gate_ = 0u;
  clear_has_gate();
}
inline ::google::protobuf::uint32 DSActivateGate::gate() const {
  // @@protoc_insertion_point(field_get:DSActivateGate.gate)
  return gate_;
}
inline void DSActivateGate::set_gate(::google::protobuf::uint32 value) {
  set_has_gate();
  gate_ = value;
  // @@protoc_insertion_point(field_set:DSActivateGate.gate)
}

// -------------------------------------------------------------------

// MPSFinished

// required uint32 ID = 1;
inline bool MPSFinished::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MPSFinished::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MPSFinished::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MPSFinished::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MPSFinished::id() const {
  // @@protoc_insertion_point(field_get:MPSFinished.ID)
  return id_;
}
inline void MPSFinished::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MPSFinished.ID)
}

// -------------------------------------------------------------------

// MPSProductRetrived

// required uint32 ID = 1;
inline bool MPSProductRetrived::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MPSProductRetrived::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MPSProductRetrived::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MPSProductRetrived::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MPSProductRetrived::id() const {
  // @@protoc_insertion_point(field_get:MPSProductRetrived.ID)
  return id_;
}
inline void MPSProductRetrived::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MPSProductRetrived.ID)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ConveyorDirection> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ConveyorDirection>() {
  return ::ConveyorDirection_descriptor();
}
template <> struct is_proto_enum< ::SensorOnMPS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SensorOnMPS>() {
  return ::SensorOnMPS_descriptor();
}
template <> struct is_proto_enum< ::SSOp> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SSOp>() {
  return ::SSOp_descriptor();
}
template <> struct is_proto_enum< ::SSField> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SSField>() {
  return ::SSField_descriptor();
}
template <> struct is_proto_enum< ::CsOp> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CsOp>() {
  return ::CsOp_descriptor();
}
template <> struct is_proto_enum< ::LightState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LightState>() {
  return ::LightState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2eproto__INCLUDED
